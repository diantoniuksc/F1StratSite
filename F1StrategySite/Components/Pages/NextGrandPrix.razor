@page "/UpcomingGrandPrix"
@using Data
@using F1StrategySite.Components.Pages.AdditionalGPElements


<html>
<head>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="" />
    <link
    rel="stylesheet"
    as="style"
    onload="this.rel='stylesheet'"
    href="https://fonts.googleapis.com/css2?display=swap&amp;family=Noto+Sans%3Awght%40400%3B500%3B700%3B900&amp;family=Space+Grotesk%3Awght%40400%3B500%3B700"
    />

    <title>Stitch Design</title>
    <link rel="icon" type="image/x-icon" href="data:image/x-icon;base64," />

    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
</head>
<body>
    <div class="relative flex size-full min-h-screen flex-col bg-[#111418] dark group/design-root overflow-x-hidden" style='font-family: "Space Grotesk", "Noto Sans", sans-serif;'>
        <div class="layout-container flex h-full grow flex-col">
            <div class="px-40 flex flex-1 justify-center py-5">
                <div class="layout-content-container flex flex-col max-w-[960px] flex-1">
                    <div class="container">
                        <div class="[480px]:px-4 [480px]:py-3">
                            <div
                            class="bg-cover bg-center flex flex-col justify-end overflow-hidden bg-[#111418] [480px]:rounded-xl min-h-[218px]"
                            style='background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0) 25%), url(@Photo);'
                            >
                                <div class="flex p-4"><p class="text-white tracking-light text-[28px] font-bold leading-tight" style="text-shadow: 0 2px 8px rgba(0,0,0,0.8), 0 0 2px #000;">@GrandPrixName</p></div>
                            </div>
                        </div>
                    </div>
                    <h2 class="text-white text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5">Event Details</h2>
                    <div class="p-4 grid grid-cols-[20%_1fr] gap-x-6">
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Race Name</p>
                            <p class="text-white text-sm font-normal leading-normal">@GrandPrixName</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Circuit Name</p>
                            <p class="text-white text-sm font-normal leading-normal">@Circut</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Location</p>
                            <p class="text-white text-sm font-normal leading-normal">@Location</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Date and Time</p>
                            <p class="text-white text-sm font-normal leading-normal">@RaceDateTime.ToString("dd-MM-yyyy HH:mm:ss")</p>
                        </div>
                    </div>

                    <CountdownRaceWeek TargetDateTime=@(new DateTime(RaceWeek, new TimeOnly(0,0,0)))></CountdownRaceWeek>

                    <h2 class="text-white text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5">Circuit Information</h2>
                    <div class="flex px-4 py-3">
                        <CircuitMap Latitude=@Latitude Longitude=@Longitude />
                    </div>
                    <div class="p-4 grid grid-cols-[20%_1fr] gap-x-6">
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Lap Length</p>
                            <p class="text-white text-sm font-normal leading-normal">3.337 km (2.074 mi)</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Race Distance</p>
                            <p class="text-white text-sm font-normal leading-normal">260.520 km (161.880 mi)</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">Number of Laps</p>
                            <p class="text-white text-sm font-normal leading-normal">78</p>
                        </div>
                        <div class="col-span-2 grid grid-cols-subgrid border-t border-t-[#3b4554] py-5">
                            <p class="text-[#9da8b9] text-sm font-normal leading-normal">DRS Zones</p>
                            <p class="text-white text-sm font-normal leading-normal">2</p>
                        </div>
                    </div>
                    <h2 class="text-white text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5">Weather Forecast</h2>
                    <div class="grid grid-cols-[repeat(auto-fit,minmax(158px,1fr))] gap-3 p-4">
                        <div class="flex flex-1 gap-3 rounded-lg border border-[#3b4554] bg-[#1c2027] p-4 flex-col">
                            <div class="text-white" data-icon="Sun" data-size="24px" data-weight="regular">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256">
                                    <path
                                    d="M120,40V16a8,8,0,0,1,16,0V40a8,8,0,0,1-16,0Zm72,88a64,64,0,1,1-64-64A64.07,64.07,0,0,1,192,128Zm-16,0a48,48,0,1,0-48,48A48.05,48.05,0,0,0,176,128ZM58.34,69.66A8,8,0,0,0,69.66,58.34l-16-16A8,8,0,0,0,42.34,53.66Zm0,116.68-16,16a8,8,0,0,0,11.32,11.32l16-16a8,8,0,0,0-11.32-11.32ZM192,72a8,8,0,0,0,5.66-2.34l16-16a8,8,0,0,0-11.32-11.32l-16,16A8,8,0,0,0,192,72Zm5.66,114.34a8,8,0,0,0-11.32,11.32l16,16a8,8,0,0,0,11.32-11.32ZM48,128a8,8,0,0,0-8-8H16a8,8,0,0,0,0,16H40A8,8,0,0,0,48,128Zm80,80a8,8,0,0,0-8,8v24a8,8,0,0,0,16,0V216A8,8,0,0,0,128,208Zm112-88H216a8,8,0,0,0,0,16h24a8,8,0,0,0,0-16Z"
                                    ></path>
                                </svg>
                            </div>
                            <div class="flex flex-col gap-1">
                                <h2 class="text-white text-base font-bold leading-tight">Friday</h2>
                                <p class="text-[#9da8b9] text-sm font-normal leading-normal">Thermometer: 22°C / 72°F, Wind: 15 km/h, Droplet: 10%</p>
                            </div>
                        </div>
                        <div class="flex flex-1 gap-3 rounded-lg border border-[#3b4554] bg-[#1c2027] p-4 flex-col">
                            <div class="text-white" data-icon="Cloud" data-size="24px" data-weight="regular">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256">
                                    <path
                                    d="M160,40A88.09,88.09,0,0,0,81.29,88.67,64,64,0,1,0,72,216h88a88,88,0,0,0,0-176Zm0,160H72a48,48,0,0,1,0-96c1.1,0,2.2,0,3.29.11A88,88,0,0,0,72,128a8,8,0,0,0,16,0,72,72,0,1,1,72,72Z"
                                    ></path>
                                </svg>
                            </div>
                            <div class="flex flex-col gap-1">
                                <h2 class="text-white text-base font-bold leading-tight">Saturday</h2>
                                <p class="text-[#9da8b9] text-sm font-normal leading-normal">Thermometer: 24°C / 75°F, Wind: 12 km/h, Droplet: 5%</p>
                            </div>
                        </div>
                        <div class="flex flex-1 gap-3 rounded-lg border border-[#3b4554] bg-[#1c2027] p-4 flex-col">
                            <div class="text-white" data-icon="CloudRain" data-size="24px" data-weight="regular">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256">
                                    <path
                                    d="M158.66,196.44l-32,48a8,8,0,1,1-13.32-8.88l32-48a8,8,0,0,1,13.32,8.88ZM232,92a76.08,76.08,0,0,1-76,76H132.28l-29.62,44.44a8,8,0,1,1-13.32-8.88L113.05,168H76A52,52,0,0,1,76,64a53.26,53.26,0,0,1,8.92.76A76.08,76.08,0,0,1,232,92Zm-16,0A60.06,60.06,0,0,0,96,88.46a8,8,0,0,1-16-.92q.21-3.66.77-7.23A38.11,38.11,0,0,0,76,80a36,36,0,0,0,0,72h80A60.07,60.07,0,0,0,216,92Z"
                                    ></path>
                                </svg>
                            </div>
                            <div class="flex flex-col gap-1">
                                <h2 class="text-white text-base font-bold leading-tight">Sunday</h2>
                                <p class="text-[#9da8b9] text-sm font-normal leading-normal">Thermometer: 20°C / 68°F, Wind: 18 km/h, Droplet: 15%</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>


@code
{
    public string GrandPrixName { get; set; }
    private string Photo { get; set; }
    public string Circut { get; set; }
    public string Location { get; set; }
    public DateTime RaceDateTime { get; set; }
    public double Latitude { get; private set; }
    public double Longitude { get; private set; }
    public DateOnly RaceWeek { get; private set; }

    protected override async Task OnInitializedAsync()
    {
        NextGPInfo nextGp = new(DateTime.Now);
        GrandPrixName = nextGp.GetNextGP();
        Photo = await nextGp.GetPhotoUrl();


        GPInfo info = new(GrandPrixName, 2025);
        Circut = await info.GetCircuitName();
        Location = await info.GetLocation();
        RaceDateTime = await info.GetRaceDateTime();
        var coords = await info.GetCircutCoordinatesAsync();
        Latitude = Convert.ToDouble(coords.Item1);
        Longitude = Convert.ToDouble(coords.Item2);
        RaceWeek = await info.GetRaceWeekStartDateAsync();

    }
}